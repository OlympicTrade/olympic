<h1>
    <i class="fa module-icon-<?php echo $this->engine->module->get('module') ?>"></i>
    <?php echo $this->header ?>
</h1>

<?php
$form = $this->editForm;
$order = $this->model;
$customer = $order->getPlugin('user');
$cart = $order->getPlugin('cart');
$attrs = $order->getPlugin('attrs');
$phone = $order->getPlugin('phone');
?>

<?php echo $this->form()->openTag($form) ?>
<div class="edit-form std-form">
    <div class="tabs tabs-class" data-name="edit-tabs">
        <div class="tabs-header">
            <div class="tab" data-tab="general">Основное</div>
            <div class="tab" data-tab="cart">Корзина</div>
            <div class="tab" data-tab="customer">Покупатель</div>
        </div>
        <div class="tabs-body">
            <div class="tab" data-tab="general">
                <div class="row">
                    <div class="label">Заказа</div>
                    №<?php echo $order->getId() ?> Дата: <?php echo $this->date($order->get('time_create'), array('time' => true)); ?>
                </div>
                <?php //echo $this->AdminFormRow($form->get('status')); ?>

                <div class="row">
                    <div class="label">Статус "<?php echo \CatalogAdmin\Model\Orders::$processStatuses[$order->get('status')] ?>"</div>
                    <div class="status-box">
                    <?php
                    switch ($order->get('status')) {
                        case \CatalogAdmin\Model\Orders::STATUS_PROCESSING:
                            echo '<span class="btn btn-green btn-status" data-status="' . \CatalogAdmin\Model\Orders::STATUS_COLLECTED . '">Собран</span>'
                                .' <span class="btn btn-blue btn-status" data-status="' . \CatalogAdmin\Model\Orders::STATUS_PENDING . '">Отложить</span>'
                                .' <span class="btn btn-red btn-status" data-status="' . \CatalogAdmin\Model\Orders::STATUS_CANCELED . '">Отмена</span>';
                            break;
                        case \CatalogAdmin\Model\Orders::STATUS_COLLECTED:
                            echo '<span class="btn btn-green btn-status" data-status="' . \CatalogAdmin\Model\Orders::STATUS_DELIVERY . '">Доставка</span>'
                                .' <span class="btn btn-blue btn-status" data-status="' . \CatalogAdmin\Model\Orders::STATUS_PENDING . '">Отложить</span>'
                                .' <span class="btn btn-red btn-status" data-status="' . \CatalogAdmin\Model\Orders::STATUS_CANCELED . '">Отмена</span>';
                            break;
                        case \CatalogAdmin\Model\Orders::STATUS_DELIVERY:
                            echo '<span class="btn btn-green btn-status" data-status="' . \CatalogAdmin\Model\Orders::STATUS_COMPLETE . '">Завершен</span>'
                                .' <span class="btn btn-blue btn-status" data-status="' . \CatalogAdmin\Model\Orders::STATUS_COLLECTED . '">Собран</span>'
                                .' <span class="btn btn-red btn-status" data-status="' . \CatalogAdmin\Model\Orders::STATUS_RETURN . '">Возврат</span>';
                            break;
                        case \CatalogAdmin\Model\Orders::STATUS_PENDING:
                            echo ' <span class="btn btn-green btn-status" data-status="' . \CatalogAdmin\Model\Orders::STATUS_PROCESSING . '">В обработке</span>'
                                .' <span class="btn btn-blue btn-status" data-status="' . \CatalogAdmin\Model\Orders::STATUS_COLLECTED . '">Собран</span>'
                                .' <span class="btn btn-red btn-status" data-status="' . \CatalogAdmin\Model\Orders::STATUS_CANCELED . '">Отмена</span>';
                            break;
                        case \CatalogAdmin\Model\Orders::STATUS_COMPLETE:
                            echo 'Нет доступных действий';
                            break;
                        case \CatalogAdmin\Model\Orders::STATUS_CANCELED:
                            echo ' <span class="btn btn-green btn-status" data-status="' . \CatalogAdmin\Model\Orders::STATUS_PROCESSING . '">В обработке</span>';
                            break;
                        case \CatalogAdmin\Model\Orders::STATUS_PROBLEM:
                            $call = new \CallcenterAdmin\Model\Call();
                            $call->select()->where(['item_id' => $order->getId()]);
                            $call->load();
                            echo '<a class="btn btn-red btn-status" href="' . $call->getEditUrl() . '">Разрешить проблему</a>'
                                .' <span class="btn btn-blue btn-status" data-status="' . \CatalogAdmin\Model\Orders::STATUS_PENDING . '">Отложить</span>';
                            break;
                    }
                    ?>
                    </div>
                </div>

                <?php echo $this->AdminFormRow($form->get('paid')); ?>

                <?php if($model->get('paid') && !$model->isPaid()) { ?>
                    <div class="row"><span class="label"></span>Недоплачено: <?php echo ($model->getPrice() - $model->get('paid')) ?> (полная стоимость <?php echo $model->getPrice() ?>)</div>
                <?php } ?>

                <div class="separator">Доставка</div>

                <?php echo $this->adminOrderDelivery($order) ?>
                
                <?php echo $this->AdminFormRow($form->get('delivery_company')); ?>
                <?php echo $this->AdminFormRow($form->get('attrs-delivery')); ?>
                <?php echo $this->AdminFormRow($form->get('city_id')); ?>
                <?php echo $this->AdminFormRow($form->get('attrs-point')); ?>
                <?php //echo $this->AdminFormRow($form->get('attrs-address')); ?>

                <div class="row row-address">
                    <span class="label">Город/Индекс</span>
                    <div>
                        <?php echo $this->formElement($form->get('attrs-city')); ?>
                        <?php echo $this->formElement($form->get('attrs-index')); ?>
                    </div>
                </div>

                <div class="row row-address">
                    <span class="label">Адрес</span>
                    <div>
                        <?php echo $this->formElement($form->get('attrs-street')); ?>
                        <?php echo $this->formElement($form->get('attrs-house')); ?>
                        <?php echo $this->formElement($form->get('attrs-building')); ?>
                        <?php echo $this->formElement($form->get('attrs-flat')); ?>
                    </div>
                </div>
                <?php echo $this->AdminFormRow($form->get('attrs-date')); ?>

                <div class="row row-time">
                    <span class="label">Время</span>
                    <?php echo $this->formElement($form->get('attrs-time_from')); ?>
                    <?php echo $this->formElement($form->get('attrs-time_to')); ?>
                </div>

                <?php echo $this->AdminFormRow($form->get('description')); ?>
            </div>
            <div class="tab" data-tab="cart">
                <?php echo $this->adminCartList($order, ['type' => 'full']) ?>
            </div>

            <div class="tab" data-tab="customer">
                <div class="row">
                    <div class="label">Аккаунт</div>
                    <?php
                    if($customer->getId()) {
                        $customerUrl = $this->url('adminUser', array(
                            'action' => 'edit'
                        ), array(
                            'query' => array('id' => $customer->getId())
                        ));

                        echo '<a href="' . $customerUrl . '">' . $customer->get('login') . '</a>';
                    } else {
                        echo 'Заказ без регистрации';
                    }
                    ?>
                </div>
                <div class="row">
                    <div class="label">ФИО</div>
                    <?php echo $attrs->get('name') ?>
                </div>
                <div class="row">
                    <div class="label">Телефон</div>
                    <a href="/admin/user/phones/edit/?id=<?php echo $phone->getId() ?>"><?php echo $phone->get('phone') ?></a>
                    <?php echo $phone->get('confirmed') ? '' : '<span class="wrap red">Не подтвержден</span>' ?>
                </div>
                <div class="row">
                    <div class="label">E-mail</div>
                    <?php echo $order->getPlugin('attrs')->get('email') ?>
                </div>

                <div class="order-history">
                    <div class="separator">История заказов</div>

                    <?php
                    $ordersHistory = \CatalogAdmin\Model\Orders::getEntityCollection();
                    $ordersHistory->select()->where
                        ->equalTo('phone_id', $order->get('phone_id'))
                        ->notEqualTo('id', $order->getId());

                    if($ordersHistory->count()) {
                        $html =
                            '<table class="std-table">' .
                            '<tr>' .
                                '<th>id</th>' .
                                '<th>Источник</th>' .
                                '<th>Стоимость</th>' .
                                '<th>Статус</th>' .
                                '<th>Дата заказа</th>' .
                            '</tr>';

                        $classes = [
                            1 => 'gray',
                            3 => 'brown',
                            5 => 'blue',
                            7 => 'pink',
                            10 => 'yellow',
                            15 => 'green',
                            20 => 'gray',
                            30 => 'red',
                            35 => 'violet',
                        ];
                        foreach ($ordersHistory as $row) {
                            $html .=
                                '<tr>' .
                                    '<td><a href="' . $row->getEditUrl() . '">' . $row->getId() . '</a></td>' .
                                    '<td>' . $row->getPlugin('adwords')->get('source') . '</td>' .
                                    '<td>' . $row->getPrice() . '</td>' .
                                    '<td><span class="wrap ' . $classes[$row->get('status')] . '">' . \CatalogAdmin\Model\Orders::$processStatuses[$row->get('status')] . '</span></td>' .
                                    '<td>' . $this->date($row->get('time_create'), ['time' => true, 'months' => 'short']) . '</td>' .
                                '</tr>';
                        }

                        $html .=
                            '</table>';

                        echo $html;
                    } else {
                        echo 'Это первый заказ у клиента';
                    }
                    ?>

                </div>

                <style>
                    .order-history {
                        max-width: 800px;
                    }
                </style>
            </div>
        </div>
    </div>

    <div class="btn-box">
        <span class="btn btn-gray" onclick="history.back()">
            <i class="fa fa-reply"></i>
            Вернутся
        </span>
        <?php if($this->model->getId()) { ?>
            <a class="btn btn-red btn-remove-ck" href="#popup-delete">
                <i class="fa fa-times"></i>
                Удалить
            </a>
        <?php } ?>
        <a class="btn btn-blue btn-submit" href="">
            <i class="fa fa-check"></i>
            Сохранить
        </a>
    </div>
</div>
<?php echo $this->form()->closeTag() ?>

<div id="popup-delete" style="display: none;">
    <div style="text-align: center; margin-bottom: 10px;">Удалить запись?</div>
    <a href="" class="btn btn-green btn-remove" data-id="<?php echo $this->model->getId() ?>"><i class="fa fa-check"></i> Удалить</a>
    <a href="" class="btn btn-red" onclick="$.fancybox.close();"><i class="fa fa-times"></i> Отмена</a>
</div>

<style>
    .delivery-table th,
    .delivery-table td {
        font-size: 13px;
        padding: 3px 6px;
    }

    .edit-form .row-address div {
        display: inline-block;
    }

    .edit-form .row-address input {
        width: 80px;
    }

    .edit-form .row-address input:first-child {
        width: 200px;
    }

    .edit-form .row-time select {
        width: 100px;
    }

    .edit-form .status-box {
        display: inline-block;
    }
</style>

<script>
    var form = $('.edit-form');

    //Изменение статуса заказа
    $('.btn-status', form).on('click', function () {
        var btn = $(this);

        $.ajax({
            url: '/admin/catalog/orders/change-status/',
            data: {
                id: '<?php echo $order->getId() ?>',
                status: btn.data('status')
            },
            method: 'post',
            success: function(resp) {
                if(resp.errors == '') {
                    location.reload();
                } else {
                    alert(resp.errors);
                }
            }
        });
    });

    //Изменение полей в доставке
    var delivery = $('[name="attrs-street"], [name="attrs-time_from"], [name="attrs-time_to"], [name="attrs-date"], [name="region_id"]', form);
    var pickup   = $('[name="attrs-point"], [name="attrs-address"], [name="attrs-date"], [name="region_id"]', form);
    var post     = $('[name="attrs-index"], [name="attrs-city"], [name="attrs-street"]', form);

    $('[name="attrs-delivery"]').on('change', function () {
        var type = $(this).val();

        if(type == 'pickup') {
            post.closest('.row').css('display', 'none');
            delivery.closest('.row').css('display', 'none');
            pickup.closest('.row').css('display', 'block');
        } else if(type == 'courier') {
            post.closest('.row').css('display', 'none');
            pickup.closest('.row').css('display', 'none');
            delivery.closest('.row').css('display', 'block');
        } else if(type == 'post') {
            delivery.closest('.row').css('display', 'none');
            pickup.closest('.row').css('display', 'none');
            post.closest('.row').css('display', 'block');
        } else {
            post.closest('.row').css('display', 'none');
            delivery.closest('.row').css('display', 'none');
            pickup.closest('.row').css('display', 'none');
        }
    }).trigger('change');

    //Корзина
    var cTable = $('.cart-table', form);
    var cCount = $('.cart-count', cTable);
    var productForm = $('.product-form', form);

    cCount.on('change', function () {
        var el = $(this);
        $.ajax({
            url: '/admin/catalog/orders/cart-count-update/',
            data: {
                orderId: <?php echo $order->getId() ?>,
                cartId:  el.data('id'),
                count:   el.val(),
            },
            method: 'post',
            success: function(resp) {
                $('.order-full-price').text(parseInt(resp.order.income) + parseInt(resp.order.delivery_income));
                $('.order-price').text($.aptero.price(resp.order.income));
                $('.order-profit').text($.aptero.price(resp.order.profit));
                el.closest('tr').find('.pr-price span').text($.aptero.price(resp.cart.price * resp.cart.count));
                el.closest('tr').find('.pr-stock span').text($.aptero.price(resp.product.stock));
            }
        });
    });

    function loadProductParams(id) {
        $.ajax({
            url: '/admin/catalog/products/get-size-taste/',
            method: 'post',
            data: {
                productId: id
            },
            success: function(resp) {
                var html = '';

                html +=
                    '<div class="row">' +
                        renderElement('select', {
                            options: resp.size,
                            class:   'std-select size'
                        }) +
                    '</div>' +
                    '<div class="row">' +
                        renderElement('select', {
                            options: resp.taste,
                            class:   'std-select taste'
                        }) +
                    '</div>' +
                    '<div class="row">' +
                        renderElement('select', {
                            options: [1, 2, 3, 4, 5],
                            class:   'std-select count'
                        }) +
                    '</div>'

                $('.props', productForm).html(html);
            }
        });
    }

    $('.product-form .product').on('keyup', function () {
        $('.props', productForm).empty();
    });

    $('.product-form .product').autocomplete({
        source: function( request, response ) {
            $.ajax( {
                url: "/admin/catalog/products/autocomplete/",
                dataType: "json",
                method: 'post',
                data: {
                    query: request.term
                },
                success: function(data) {
                    response(data);
                }
            });
        },
        select: function( event, ui ) {
            loadProductParams(ui.item.id);
        }
    });

    $('.btn', productForm).on('click', function () {
        if(!$('.row', $('.props', productForm)).length) {
            alert('Товар не выбран');
            return false;
        }

        $.ajax( {
            url: "/admin/catalog/orders/add-product/",
            dataType: "json",
            method: 'post',
            data: {
                orderId: <?php echo $order->getId() ?>,
                product: $('.product', productForm).val(),
                tasteId: $('.taste', productForm).val(),
                sizeId:  $('.size', productForm).val(),
                count:   $('.count', productForm).val(),
            },
            success: function(data) {
                $('.props', productForm).empty();
                $('.product', productForm).val('');

                location.href = '/admin/catalog/orders/edit/?id=<?php echo $order->getId() ?>#edit-tabs=cart';
                location.reload();
            }
        });
    });

    var deliverySelect = $('[name="attrs-delivery"]', form);
    var pointsSelect   = $('[name="attrs-point"]', form);
    var companySelect  = $('[name="delivery_company"]', form);
    var citiesSelect   = $('[name="city_id"]', form);

    pointsSelect.on('change', function() {
        var pointId = $(this).val();

        $.ajax({
            url: '/admin/delivery/delivery/get-point-info/',
            method: 'post',
            data: {pointId: pointId},
            success: function(resp) {
                updateSelect(companySelect, resp.companies);
            }
        });
    });

    citiesSelect.on('change', function() {
        if(deliverySelect.val() == 'pickup') {
            updatePoints();
        }
    });

    deliverySelect.on('change', function() {
        updateCities();
    });

    function updateCities() {
        var deliveryType = deliverySelect.val();

        $.ajax({
            url: '/admin/delivery/delivery/get-cities/',
            method: 'post',
            data: {deliveryType: deliveryType},
            success: function(resp) {
                updateSelect(citiesSelect, resp.cities);
            }
        });
    }

    function updatePoints() {
        var cityId = $('[name="city_id"]', form).val();

        $.ajax({
            url: '/admin/delivery/delivery/get-points/',
            method: 'post',
            data: {cityId: cityId},
            success: function(resp) {
                updateSelect(pointsSelect, resp.points);
            }
        });
    }

    function updateSelect(select, data) {
        var cVal = select.val();
        select.empty();

        $.each(data, function(key, val) {
            select.append('<option value="' + key + '">' + val + '</option>');
        });

        if(!$('option[value="' + cVal + '"]', select).length) {
            select.val($('option:first', select).val()).trigger('change');
        } else {
            select.val(cVal).trigger('change');
        }
    }
</script>